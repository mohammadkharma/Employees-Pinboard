{"version":3,"sources":["components/navbar.component.js","components/pins-list.component.js","components/edit-pin.component.js","components/create-pin.component.js","components/create-employee.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Pin","props","pin","employeeName","description","date","substring","_id","href","onClick","deletePin","PinsList","bind","state","pins","axios","get","then","res","setState","data","catch","err","console","log","id","delete","this","filter","map","currentPin","key","pinsList","EditPin","onChangeEmployeeName","onChangeDescription","onChangeDate","onSubmit","Date","employees","match","params","length","employee","e","target","value","preventDefault","post","window","location","required","onChange","type","selected","CreatePin","CreateEmployee","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.871614f5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"nav nav-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Pinboard\n        </Link>\n        <div className=\"collpase navbar-collpase\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Pins\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create\" className=\"nav-link\">\n                Create Pin\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/employee\" className=\"nav-link\">\n                Create Employee\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Pin = (props) => {\n  return (\n    <tr>\n      <th>{props.pin.employeeName}</th>\n      <th>{props.pin.description}</th>\n      <th>{props.pin.date.substring(0, 10)}</th>\n      <th>\n        <Link to={\"/edit/\" + props.pin._id}>edit</Link> |\n        <a\n          href=\"/\"\n          onClick={() => {\n            props.deletePin(props.pin._id);\n          }}\n        >\n          delete\n        </a>\n      </th>\n    </tr>\n  );\n};\n\nclass PinsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deletePin = this.deletePin.bind(this);\n\n    this.state = { pins: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/pins/\")\n      .then((res) => {\n        this.setState({ pins: res.data });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  deletePin(id) {\n    axios\n      .delete(\"http://localhost:5000/pins/\" + id)\n      .then((res) => console.log(res.data));\n\n    this.setState({\n      pins: this.state.pins.filter((pin) => pin._id !== id),\n    });\n  }\n\n  pinsList() {\n    return this.state.pins.map((currentPin) => {\n      return (\n        <Pin pin={currentPin} deletePin={this.deletePin} key={currentPin._id} />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Pins</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Employee Name</th>\n              <th>Description</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.pinsList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default PinsList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EditPin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmployeeName = this.onChangeEmployeeName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      employeeName: \"\",\n      description: \"\",\n      date: new Date(),\n      employees: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/pins/\" + this.props.match.params.id)\n      .then((res) => {\n        this.setState({\n          employeeName: res.data.employeeName,\n          description: res.data.description,\n          date: new Date(res.data.date),\n        });\n      })\n      .catch((err) => console.log(err));\n\n    axios.get(\"http://localhost:5000/employees/\").then((res) => {\n      if (res.data.length > 0) {\n        this.setState({\n          employees: res.data.map((employee) => employee.employeeName),\n        });\n      }\n    });\n  }\n\n  onChangeEmployeeName(e) {\n    this.setState({\n      employeeName: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const pin = {\n      employeeName: this.state.employeeName,\n      description: this.state.description,\n      date: this.state.date,\n    };\n\n    console.log(pin);\n\n    axios\n      .post(\n        \"http://localhost:5000/pins/update\" + this.props.match.params.id,\n        pin\n      )\n      .then((res) => {\n        console.log(res.data);\n      });\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Pin</h3>\n\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>EmployeeName: </label>\n            <select\n              required\n              className=\"form-control\"\n              value={this.state.employeeName}\n              onChange={this.onChangeEmployeeName}\n            >\n              {this.state.employees.map(function (employee) {\n                return (\n                  <option key={employee} value={employee}>\n                    {employee}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Edit Pin\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditPin;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass CreatePin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmployeeName = this.onChangeEmployeeName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      employeeName: \"\",\n      description: \"\",\n      date: new Date(),\n      employees: [],\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/employees/\").then((res) => {\n      if (res.data.length > 0) {\n        this.setState({\n          employees: res.data.map((employee) => employee.employeeName),\n          employeeName: res.data[0].employeeName,\n        });\n      }\n    });\n  }\n\n  onChangeEmployeeName(e) {\n    this.setState({\n      employeeName: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const pin = {\n      employeeName: this.state.employeeName,\n      description: this.state.description,\n      date: this.state.date,\n    };\n\n    console.log(pin);\n\n    axios.post(\"http://localhost:5000/pins/add\", pin).then((res) => {\n      console.log(res.data);\n    });\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New Pin</h3>\n\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>EmployeeName: </label>\n            <select\n              required\n              className=\"form-control\"\n              value={this.state.employeeName}\n              onChange={this.onChangeEmployeeName}\n            >\n              {this.state.employees.map(function (employee) {\n                return (\n                  <option key={employee} value={employee}>\n                    {employee}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Pin\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreatePin;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass CreateEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmployeeName = this.onChangeEmployeeName.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      employeeName: \"\",\n    };\n  }\n\n  onChangeEmployeeName(e) {\n    this.setState({\n      employeeName: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const employee = {\n      employeeName: this.state.employeeName,\n    };\n\n    console.log(employee);\n\n    axios.post(\"http://localhost:5000/employees/add\", employee).then((res) => {\n      console.log(res.data);\n    });\n\n    this.setState({\n      employeeName: \"\",\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h3>Create New Employee</h3>\n\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>EmployeeName: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.employeeName}\n              onChange={this.onChangeEmployeeName}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Employee\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateEmployee;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/navbar.component\";\nimport PinsList from \"./components/pins-list.component\";\nimport EditPin from \"./components/edit-pin.component\";\nimport CreatePin from \"./components/create-pin.component\";\nimport CreateEmployee from \"./components/create-employee.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br />\n        <Route path=\"/\" exact component={PinsList} />\n        <Route path=\"/edit/:id\" exact component={EditPin} />\n        <Route path=\"/create\" exact component={CreatePin} />\n        <Route path=\"/employee\" exact component={CreateEmployee} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}